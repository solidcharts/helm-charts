{{ $plugins := compact (list "") }}
{{- if .Values.peerDiscoveryK8sPlugin.enabled }}
{{ $plugins = append $plugins "rabbitmq_peer_discovery_k8s" }}
{{- end }}
{{- if .Values.managementPlugin.enabled }}
{{ $plugins = append $plugins "rabbitmq_management" }}
{{- end }}
{{- if .Values.metrics.enabled }}
{{ $plugins = append $plugins "rabbitmq_prometheus"}}
{{- end }}
{{- if .Values.additionalPlugins }}
{{ $plugins = concat $plugins .Values.additionalPlugins }}
{{- end }}
{{- if .Values.installPlugins }}
{{- range .Values.installPlugins }}
{{ $plugins = append $plugins (include "rabbitmq.pluginNameFromUrl" .) }}
{{- end }}
{{- end }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "rabbitmq.configMapName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "rabbitmq.labels" . | nindent 4 }}
data:
  rabbitmq.conf: |
    # Default RabbitMQ configuration
    loopback_users.guest = false
    listeners.tcp.default = {{ .Values.service.ports.amqp }}

    {{- if .Values.managementPlugin.enabled }}
    # Management plugin options
    management.tcp.port = {{ .Values.service.ports.mgmt }}
    {{- end }}

    {{- if .Values.peerDiscoveryK8sPlugin.enabled }}
    # Clustering with K8s peer discovery plugin
    cluster_name = {{ include "rabbitmq.fullname" . }}-cluster
    cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.{{ .Values.clusterDomain }}
    cluster_formation.k8s.address_type = {{ .Values.peerDiscoveryK8sPlugin.addressType }}
    cluster_formation.k8s.service_name = {{ include "rabbitmq.serviceNameHeadless" . }}
    cluster_formation.k8s.hostname_suffix = .{{ include "rabbitmq.serviceNameHeadless" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
    {{- end }}

    {{- if .Values.config.memoryHighWatermark.enabled }}
    # Memory configuration
    vm_memory_high_watermark.{{ .Values.config.memoryHighWatermark.type }} = {{ .Values.config.memoryHighWatermark.value }}
    {{- end }}

    {{- if .Values.metrics.enabled }}
    # Prometheus metrics
    prometheus.tcp.port = {{ .Values.containerPorts.metrics }}
    {{- end }}

    {{- if not (empty .Values.config.extraConfiguration) }}
    # Extra configuration
{{ .Values.config.extraConfiguration | indent 4 }}
    {{- end }}

  {{- if not (empty .Values.config.advancedConfiguration) }}
  advanced.config: |
{{ .Values.config.advancedConfiguration | indent 4 }}
  {{- end }}
  enabled_plugins: |
    [{{- join "," $plugins }}].
