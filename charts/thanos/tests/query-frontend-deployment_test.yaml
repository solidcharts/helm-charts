suite: test query-frontend deployment
templates:
  - query-frontend/deployment.yaml
tests:
  - it: should skip deployment with default values
    asserts:
      - hasDocuments:
          count: 0
  - it: should generate deployment when enabled
    set:
      queryFrontend:
        enabled: true
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: RELEASE-NAME-thanos-query-frontend
      - equal:
          path: spec.replicas
          value: 1
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: quay.io/thanos/thanos:v
      - equal:
          path: spec.template.spec.containers[0].name
          value: thanos-query-frontend
  - it: should use custom replica count
    set:
      queryFrontend:
        enabled: true
        replicas: 3
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.replicas
          value: 3
  - it: should use custom image tag
    set:
      image:
        tag: v0.99.0
      queryFrontend:
        enabled: true
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: quay.io/thanos/thanos:v0.99.0
  - it: should not render scheduling fields when no commons or component configs are set
    set:
      queryFrontend:
        enabled: true
    asserts:
      - isKind:
          of: Deployment
      - notExists:
          path: spec.template.spec.nodeSelector
      - notExists:
          path: spec.template.spec.affinity
      - notExists:
          path: spec.template.spec.topologySpreadConstraints
      - notExists:
          path: spec.template.spec.tolerations
  - it: should use components nodeSelector when no component-specific config is set
    set:
      queryFrontend:
        enabled: true
      components:
        nodeSelector:
          kubernetes.io/arch: amd64
          node-type: compute
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            kubernetes.io/arch: amd64
            node-type: compute
  - it: should use components tolerations when no component-specific config is set
    set:
      components:
        tolerations:
          - key: "infrastructure"
            operator: "Equal"
            value: "monitoring"
            effect: "NoSchedule"
          - key: "node-role"
            operator: "Exists"
            effect: "NoExecute"
      queryFrontend:
        enabled: true
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.tolerations
          value:
            - key: "infrastructure"
              operator: "Equal"
              value: "monitoring"
              effect: "NoSchedule"
            - key: "node-role"
              operator: "Exists"
              effect: "NoExecute"
  - it: should use components affinity when no component-specific config is set
    set:
      components:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-type
                  operator: In
                  values:
                  - compute
      queryFrontend:
        enabled: true
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                    - compute
  - it: should use components topologySpreadConstraints when no component-specific config is set
    set:
      components:
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app: thanos
      queryFrontend:
        enabled: true
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.topologySpreadConstraints
          value:
            - labelSelector:
                matchLabels:
                  app: thanos
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
  - it: should override components nodeSelector with component-specific config
    set:
      components:
        nodeSelector:
          kubernetes.io/arch: amd64
          node-type: compute
      queryFrontend:
        enabled: true
        nodeSelector:
          kubernetes.io/arch: arm64
          component: query-frontend
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            component: query-frontend
            kubernetes.io/arch: arm64
      - notEqual:
          path: spec.template.spec.nodeSelector
          value:
            kubernetes.io/arch: amd64
            node-type: compute
  - it: should override components tolerations with component-specific config
    set:
      components:
        tolerations:
          - key: "infrastructure"
            operator: "Equal"
            value: "monitoring"
            effect: "NoSchedule"
      queryFrontend:
        enabled: true
        tolerations:
          - key: "query-frontend-specific"
            operator: "Equal"
            value: "true"
            effect: "NoSchedule"
          - key: "ssd-only"
            operator: "Exists"
            effect: "NoExecute"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.tolerations
          value:
            - key: "query-frontend-specific"
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
            - key: "ssd-only"
              operator: "Exists"
              effect: "NoExecute"
      - notEqual:
          path: spec.template.spec.tolerations[0].key
          value: "infrastructure"
  - it: should override components affinity with component-specific config
    set:
      components:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-type
                  operator: In
                  values:
                  - compute
      queryFrontend:
        enabled: true
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - thanos
                topologyKey: kubernetes.io/hostname
    asserts:
      - isKind:
          of: Deployment
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
      - notExists:
          path: spec.template.spec.affinity.nodeAffinity
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight
          value: 100
  - it: should override components topologySpreadConstraints with component-specific config
    set:
      components:
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app: thanos
      queryFrontend:
        enabled: true
        topologySpreadConstraints:
          - maxSkew: 2
            topologyKey: kubernetes.io/hostname
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                component: query-frontend
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.topologySpreadConstraints
          value:
            - maxSkew: 2
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: ScheduleAnyway
              labelSelector:
                matchLabels:
                  component: query-frontend
      - notEqual:
          path: spec.template.spec.topologySpreadConstraints[0].topologyKey
          value: topology.kubernetes.io/zone
  - it: should use mixed components and component-specific configs (selective override)
    set:
      components:
        nodeSelector:
          kubernetes.io/arch: amd64
        tolerations:
          - key: "infrastructure"
            operator: "Equal"
            value: "monitoring"
            effect: "NoSchedule"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-type
                  operator: In
                  values:
                  - compute
      queryFrontend:
        enabled: true
        # Override only tolerations, use components for nodeSelector and affinity
        tolerations:
          - key: "query-frontend-only"
            operator: "Equal"
            value: "true"
            effect: "NoSchedule"
    asserts:
      - isKind:
          of: Deployment
      # Should use components nodeSelector
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            kubernetes.io/arch: amd64
      # Should use components affinity
      - equal:
          path: spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].key
          value: node-type
      # Should use component-specific tolerations
      - equal:
          path: spec.template.spec.tolerations
          value:
            - key: "query-frontend-only"
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
      - notEqual:
          path: spec.template.spec.tolerations[0].key
          value: "infrastructure"
  - it: should handle empty component-specific configs and fall back to components shared config
    set:
      components:
        nodeSelector:
          kubernetes.io/arch: amd64
        tolerations:
          - key: "infrastructure"
            operator: "Exists"
            effect: "NoSchedule"
      queryFrontend:
        enabled: true
        nodeSelector: {}
        tolerations: []
    asserts:
      - isKind:
          of: Deployment
      # Empty component configs should not render any fields
      - notExists:
          path: spec.template.spec.nodeSelector
      - notExists:
          path: spec.template.spec.tolerations
