suite: test store gateway statefulset
templates:
  - store-gateway/statefulset.yaml
tests:
  - it: should skip statefulset when disabled
    set:
      storeGateway:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0
  - it: should generate statefulset with default values
    asserts:
      - isKind:
          of: StatefulSet
      - matchRegex:
          path: metadata.name
          pattern: RELEASE-NAME-thanos-store-gateway
      - equal:
          path: spec.replicas
          value: 1
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: quay.io/thanos/thanos:v
      - equal:
          path: spec.template.spec.containers[0].name
          value: thanos-store-gateway
      - equal:
          path: spec.serviceName
          value: RELEASE-NAME-thanos-store-gateway-headless
  - it: should use custom replica count
    set:
      storeGateway:
        enabled: true
        replicas: 3
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.replicas
          value: 3
  - it: should use custom image tag
    set:
      image:
        tag: v0.99.0
      storeGateway:
        enabled: true
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.containers[0].image
          value: quay.io/thanos/thanos:v0.99.0
  - it: should use global image registry
    set:
      global:
        imageRegistry: "registry.example.com"
      image:
        tag: v0.99.0
      storeGateway:
        enabled: true
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.containers[0].image
          value: registry.example.com/thanos/thanos:v0.99.0
  - it: should use custom update strategy
    set:
      storeGateway:
        enabled: true
        updateStrategy:
          type: OnDelete
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.updateStrategy.type
          value: OnDelete
  - it: should configure persistent storage when enabled
    set:
      storeGateway:
        enabled: true
        persistence:
          enabled: true
          storageClass: ssd
          size: 50Gi
          accessMode: ReadWriteOnce
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.volumeClaimTemplates[0].spec.storageClassName
          value: ssd
      - equal:
          path: spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: 50Gi
      - equal:
          path: spec.volumeClaimTemplates[0].spec.accessModes[0]
          value: ReadWriteOnce
  - it: should use emptyDir when persistence disabled
    set:
      storeGateway:
        enabled: true
        persistence:
          enabled: false
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.volumes[?(@.name == "data")].emptyDir
          value: {}
      - notExists:
          path: spec.volumeClaimTemplates
  - it: should configure PVC retention policy when supported
    capabilities:
      majorVersion: 1
      minorVersion: 27
    set:
      storeGateway:
        enabled: true
        persistence:
          enabled: true
          retainDeleted: true
          retainScaled: false
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy.whenDeleted
          value: Retain
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy.whenScaled
          value: Delete
  - it: should add checksum annotation when objstore config created
    set:
      storeGateway:
        enabled: true
      objstoreConfig:
        create: true
    asserts:
      - isKind:
          of: StatefulSet
      - exists:
          path: spec.template.metadata.annotations.checksum/config
  - it: should not add checksum annotation when objstore config not created
    set:
      storeGateway:
        enabled: true
      objstoreConfig:
        create: false
    asserts:
      - isKind:
          of: StatefulSet
      - notExists:
          path: spec.template.metadata.annotations.checksum/config
  - it: should add extra pod annotations
    set:
      storeGateway:
        enabled: true
        podAnnotations:
          custom.annotation: "test-value"
          another.annotation: "another-value"
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.metadata.annotations["custom.annotation"]
          value: "test-value"
      - equal:
          path: spec.template.metadata.annotations["another.annotation"]
          value: "another-value"
  - it: should add extra pod labels
    set:
      storeGateway:
        enabled: true
        podLabels:
          custom.label: "test-value"
          environment: "production"
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.metadata.labels["custom.label"]
          value: "test-value"
      - equal:
          path: spec.template.metadata.labels.environment
          value: "production"
  - it: should configure container ports
    set:
      storeGateway:
        enabled: true
        containerPorts:
          grpc: 9090
          http: 8080
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.containers[0].ports[?(@.name == "grpc")].containerPort
          value: 9090
      - equal:
          path: spec.template.spec.containers[0].ports[?(@.name == "http")].containerPort
          value: 8080
  - it: should configure liveness and readiness probes
    set:
      storeGateway:
        enabled: true
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: http
          initialDelaySeconds: 10
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 30
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
          value: 10
  - it: should not render scheduling fields when no components or component configs are set
    set:
      storeGateway:
        enabled: true
    asserts:
      - isKind:
          of: StatefulSet
      - notExists:
          path: spec.template.spec.nodeSelector
      - notExists:
          path: spec.template.spec.affinity
      - notExists:
          path: spec.template.spec.topologySpreadConstraints
      - notExists:
          path: spec.template.spec.tolerations
  - it: should use components nodeSelector when no component-specific config is set
    set:
      storeGateway:
        enabled: true
      components:
        nodeSelector:
          kubernetes.io/arch: amd64
          node-type: storage
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            kubernetes.io/arch: amd64
            node-type: storage
  - it: should use components tolerations when no component-specific config is set
    set:
      components:
        tolerations:
          - key: "storage"
            operator: "Equal"
            value: "ssd"
            effect: "NoSchedule"
      storeGateway:
        enabled: true
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.tolerations
          value:
            - key: "storage"
              operator: "Equal"
              value: "ssd"
              effect: "NoSchedule"
  - it: should override components nodeSelector with component-specific config
    set:
      components:
        nodeSelector:
          kubernetes.io/arch: amd64
          node-type: compute
      storeGateway:
        enabled: true
        nodeSelector:
          kubernetes.io/arch: arm64
          component: store-gateway
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            component: store-gateway
            kubernetes.io/arch: arm64
      - notEqual:
          path: spec.template.spec.nodeSelector
          value:
            kubernetes.io/arch: amd64
            node-type: compute
  - it: should configure extra volumes and volume mounts
    set:
      storeGateway:
        enabled: true
        extraVolumes:
          - name: custom-config
            configMap:
              name: store-gateway-config
        extraVolumeMounts:
          - name: custom-config
            mountPath: /etc/custom
            readOnly: true
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.volumes[?(@.name == "custom-config")].configMap.name
          value: store-gateway-config
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[?(@.name == "custom-config")].mountPath
          value: /etc/custom
  - it: should configure resources
    set:
      storeGateway:
        enabled: true
        resources:
          requests:
            memory: 2Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 1
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 2Gi
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 1
  - it: should configure auto-gomemlimit when enabled
    set:
      storeGateway:
        enabled: true
      autoGomemlimit:
        enabled: true
        ratio: 0.9
    asserts:
      - isKind:
          of: StatefulSet
      - contains:
          path: spec.template.spec.containers[0].args
          content: --enable-auto-gomemlimit
      - contains:
          path: spec.template.spec.containers[0].args
          content: --auto-gomemlimit.ratio=0.9
  - it: should add extra args
    set:
      storeGateway:
        enabled: true
        extraArgs:
          - --sync-block-duration=5m
          - --chunk-pool-size=2GB
    asserts:
      - isKind:
          of: StatefulSet
      - contains:
          path: spec.template.spec.containers[0].args
          content: --sync-block-duration=5m
      - contains:
          path: spec.template.spec.containers[0].args
          content: --chunk-pool-size=2GB
